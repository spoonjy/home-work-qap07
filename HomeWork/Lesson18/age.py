def validate_name(name: str) -> str:
    """

    Вернет текст с ошибкой, если имя пустое или если в
    имени меньше 3х символов, так же вернет ошибку при
    наличии двух и более пробелов.

    """
    if not name:
        return "Ошибка: Пустое имя. "
    if len(name) < 3:
        return "Ошибка: В имени меньше трех символов. "
    space = 0
    for symbol in name:
        if symbol == " ":
            space += 1
            if space > 1:
                return "Ошибка: Cлишком много пробелов! "
    else:
        return ""


def validate_age(age: int) -> str:
    """

    Вернет текст с ошибкой если возраст отсутствует, либо меньше 14 лет.

    """
    if age <= 0:
        return "Ошибка: неверное значение возраста"
    if age < 14:
        return "Ошибка: Возраст меньше 14 лет"
    else:
        return ""


def validate_passport(age: int) -> str:
    """

    Вернет текст с напоминанием получить паспорт,
    если введеный возраст равен значению 16, 17, 25, 26, 45, 46.

    """
    if 16 <= age <= 17:
        return "Не забудьте получить первый паспорт. "
    elif 25 <= age <= 26:
        return "Не забудьте заменить паспорт. "
    elif 45 <= age <= 46:
        return "Не забудьте еще раз заменить паспорт. "
    return ""


def clean(name: str) -> str:
    """

    Вернет метод strip() возвращает копию строки, в которой все символы
    были удалены с начала и конца строки (символом по умолчанию
    является пробел).

    """
    cleantramsform = name.strip()
    return cleantramsform


def main(name, age):
    """
    Основная функция из которой запускаются все остальные функции.
    Так же в этой функции находится бесконечный цикл,
    который продолжает запрашивать ввод данных от пользователя,
    если они были введены с одной из ошибок.

    """

    if validate_name(name) == "" and validate_age(age) == "":
        return f"Привет, {name.title()}! Тебе {age} лет. {validate_passport(age)}"

